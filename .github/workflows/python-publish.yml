name: Build

on: [push, pull_request]

jobs:
  publish-on-macos:
    name: Build wheels on macos
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Download OS Binary
      shell: bash
      run: |
        mkdir macos
        curl -L  $(curl -s https://api.github.com/repos/fixstars/ion-kit/releases/latest | grep browser_download_url | grep macos| cut -d'"' -f4)| tar zx -C  macos --strip-components 1
        cp  macos/lib/libHalide.16.0.0.dylib python/ionpy/module/macos/libHalide.16.dylib
        cp  macos/lib/libion-core.dylib python/ionpy/module/macos/libion-core.dylib
        cp  macos/lib/libion-bb.dylib python/ionpy/module/macos/libion-bb.dylib

    - name: Build package
      run: |
        mkdir dist
        pip install build
        cd python && python -m build && mv dist ../dist

#    - name: Publish package distributions to TestPyPI
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        repository-url: https://test.pypi.org/legacy/
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
    
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-macos
        path: python/dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: cd python && pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: python/dist/*.tar.gz
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
